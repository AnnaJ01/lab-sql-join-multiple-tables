-- 1. Write a query to display for each store its store ID, city, and country.

SELECT * FROM SAKILA.STORE;
SELECT * FROM SAKILA.ADDRESS;
SELECT * FROM SAKILA.CITY;
SELECT * FROM SAKILA.COUNTRY;


SELECT S.STORE_ID, C.CITY, CC.COUNTRY
FROM SAKILA.STORE S
LEFT JOIN SAKILA.ADDRESS A
ON S.ADDRESS_ID = A.ADDRESS_ID
LEFT JOIN SAKILA.CITY C
ON A.CITY_ID = C.CITY_ID
LEFT JOIN SAKILA.COUNTRY CC
ON C.COUNTRY_ID = CC.COUNTRY_ID
;



-- 2. Write a query to display how much business, in dollars, each store brought in.


SELECT * FROM SAKILA.STORE;
SELECT * FROM SAKILA.STAFF;
SELECT * FROM SAKILA.PAYMENT;


SELECT S.STORE_ID, SUM(P.AMOUNT)
FROM SAKILA.STORE S
LEFT JOIN SAKILA.STAFF SS
ON S.STORE_ID = SS.STORE_ID
LEFT JOIN SAKILA.PAYMENT P
ON SS.STAFF_ID = P.STAFF_ID
GROUP BY S.STORE_ID;



-- 3. What is the average running time of films by category?


SELECT * FROM SAKILA.CATEGORY;
SELECT * FROM SAKILA.FILM_CATEGORY;
SELECT * FROM SAKILA.FILM;


SELECT C.NAME, AVG(F.LENGTH)
FROM SAKILA.CATEGORY C
LEFT JOIN SAKILA.FILM_CATEGORY FC
ON C.CATEGORY_ID = FC.CATEGORY_ID
LEFT JOIN SAKILA.FILM F
ON FC.FILM_ID = F.FILM_ID
GROUP BY C.NAME;

-- 4.  Which film categories are longest?

SELECT C.NAME, SUM(F.LENGTH) AS RUNNING_TIME
FROM SAKILA.CATEGORY C
LEFT JOIN SAKILA.FILM_CATEGORY FC
ON C.CATEGORY_ID = FC.CATEGORY_ID
LEFT JOIN SAKILA.FILM F
ON FC.FILM_ID = F.FILM_ID
GROUP BY C.NAME
ORDER BY RUNNING_TIME DESC;



-- 5. Display the most frequently rented movies in descending order.

SELECT * FROM SAKILA.FILM;
SELECT * FROM SAKILA.INVENTORY;
SELECT * FROM SAKILA.RENTAL;


SELECT F.TITLE, COUNT(R.RENTAL_ID) AS RENTAL_COUNT
FROM SAKILA.FILM F
LEFT JOIN SAKILA.INVENTORY I
ON F.FILM_ID = I.FILM_ID
LEFT JOIN SAKILA.RENTAL R
ON I.INVENTORY_ID = R.INVENTORY_ID
GROUP BY F.TITLE
ORDER BY RENTAL_COUNT DESC;


-- 6. List the top five genres in gross revenue in descending order.

SELECT * FROM SAKILA.CATEGORY;
SELECT * FROM SAKILA.FILM_CATEGORY;
SELECT * FROM SAKILA.FILM;
SELECT * FROM SAKILA.INVENTORY;
SELECT * FROM SAKILA.RENTAL;
SELECT * FROM SAKILA.PAYMENT;

SELECT C.NAME, SUM(P.AMOUNT) AS GROSS_REVENUE
FROM SAKILA.CATEGORY C
LEFT JOIN SAKILA.FILM_CATEGORY FC
ON C.CATEGORY_ID = FC.CATEGORY_ID
LEFT JOIN SAKILA.FILM F
ON FC.FILM_ID = F.FILM_ID
LEFT JOIN SAKILA.INVENTORY I
ON F.FILM_ID = I.FILM_ID
LEFT JOIN SAKILA.RENTAL R
ON I.INVENTORY_ID = R.INVENTORY_ID
LEFT JOIN SAKILA.PAYMENT P
ON R.RENTAL_ID = P.RENTAL_ID
GROUP BY C.NAME
ORDER BY GROSS_REVENUE DESC
LIMIT 5;


-- 7. Is "Academy Dinosaur" available for rent from Store 1?

SELECT * FROM SAKILA.FILM;
SELECT * FROM SAKILA.INVENTORY;
SELECT * FROM SAKILA.STORE;

SELECT F.TITLE, S.STORE_ID
FROM SAKILA.FILM F
LEFT JOIN SAKILA.INVENTORY I
ON F.FILM_ID = I.FILM_ID
LEFT JOIN SAKILA.STORE S
ON I.STORE_ID = S.STORE_ID
WHERE F.TITLE = 'Academy Dinosaur';